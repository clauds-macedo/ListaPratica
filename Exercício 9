#include <stdio.h>

int maior(int n1, int n2) {
	return n1 < n2 ? n2 : n1;
}

int menor(int n1, int n2) {
	return n1 < n2 ? n1 : n2;
}

int hePar(int n) {
	return n % 2 == 0 ? 1 : 0;
}

int modulo(int n) {
	return n < 0 ? n * (-1) : n;
}

int getCoeficiente(int maior, int menor, int q){
	if(menor*q > maior)
		return q - 1;
	else {
		q += 1;
		getCoeficiente(maior, menor, q);
	}
}

void mdc(int coeficientes[], int tamanhoDoVetor[], int n1, int n2, int Valormdc[]) {
	int numMaior = maior(n1, n2);
	int numMenor = menor(n1, n2);
	int resto;
	int proxNumerador;
	int e = 1;
	coeficientes[0] = 0;

	resto = numMaior % numMenor;
	coeficientes[e] = getCoeficiente(numMaior, numMenor, 1);
	proxNumerador = numMenor;
	
	for (int i = 0; 1 != 0 ; i++) {

		if(resto == 0) {
			Valormdc[0] = proxNumerador;
			tamanhoDoVetor[0] = e + 1;
			break;
		}

		int aux;
		aux = proxNumerador;
		proxNumerador = resto;
		e++;
		coeficientes[e] = getCoeficiente(aux, resto, 1);
		resto = aux % resto;
	}

	// for (int i = 0; i <= e; i++) {
	// 	printf("&&%i  ***%i\n", coeficientes[i], e + 1 );
	// }
	
}

void combinacaoLinear(int coeficientes[], int tamanhoDoVetor[], int n1, int n2) {
	int numMaior = maior(n1, n2);
	int numMenor = menor(n1, n2);
	int tam = tamanhoDoVetor[0] - 2;
	int beforeMult = 1;
	int aux = 1;

	for (int i = tam; i >= 0; --i){

		if(i == tam){
			coeficientes[i] = coeficientes[i] * aux;
			beforeMult = aux;
			aux = coeficientes[i];
		}
		else {
			coeficientes[i] = coeficientes[i] * aux + beforeMult;
			beforeMult = aux;
			aux = coeficientes[i];
		}
	}
	
	if(hePar(tamanhoDoVetor[0] - 1)) {
		coeficientes[1] *= -1;
	} else {
		coeficientes[0] *= -1;
	}

	// printf("\n@@%i,%i,%i,%i\n", coeficientes[0], coeficientes[1], coeficientes[2], coeficientes[3]);

}

int calcularResultado(int a, int b, int m, int inverso, int valorMDC[], int s[], int cont) {
	if(inverso > m || inverso < 0) {
		for(int i = 0; inverso > m || inverso < 0; i++) {
			if(inverso > m) inverso = inverso % m;
			if(inverso < 0) inverso = inverso + m;
		}
	}

	int x = inverso * b;

	if(x > m || x < 0) {
		for(int i = 0; x > m || x < 0; i++) {
			if(x > m) x = x % m;
			if(x < 0) x = x + m;
		}
	}

	s[cont] = x;
	// printf("----%i\n", x);	
}

int calcularM(int abm[]) {
	int M = 1;

	for(int i = 0; i < 6; i += 2) {
		M *= abm[i + 1];
		// printf("**%i\n", abm[i + 1]);
	}

	return M;
}


int main() {

	int coeficientes[300];
	int s[300];
	int abm[300];
	int sistemas[300];
	int Valormdc[1];
	int inverso;
	int MdcPrimeiro;
	int contador = 0;
	int M = 0;
	int resultado = 0;

	int a, b, m;
	int tamanhoDoVetor[1];
	tamanhoDoVetor[0] = 0;	

	for(int i = 0; i < 6; i += 2) {
		printf("\nInforme b, m\n", i + 1);
		scanf("%i", &a);
		// scanf("%i", &b);
		scanf("%i", &m);
		
		mdc(coeficientes, tamanhoDoVetor,a, m, Valormdc);
		
		// printf("MDC != %i\n", Valormdc[0]);

		if(Valormdc[0] != 1) {
			printf("MDC != 1\n");
			return 0;
		}

		abm[i] = a;
		abm[i + 1] = m;

	}

	// for(int i = 0; i < 6; i++) {
	// 	printf("&& - %i\n",abm[i]);
	// }

	M = calcularM(abm);

	for(int i = 0; i < 6; i += 2) {
		sistemas[i] = M / abm[i + 1];
		sistemas[i + 1] = abm[i + 1];
	}
	
	// for(int i = 0; i < 6; i++) {
	// 	printf("%i\n",sistemas[i]);
	// }
	
	// printf("M=%i\n",M);

	tamanhoDoVetor[0] = 0;	

	for(int i = 0; i < 6; i += 2) {

		// mdc(coeficientes, tamanhoDoVetor, a, m, Valormdc);
		mdc(coeficientes, tamanhoDoVetor, sistemas[i], sistemas[i+1], Valormdc);

		// combinacaoLinear(coeficientes,tamanhoDoVetor,a, m);
		combinacaoLinear(coeficientes, tamanhoDoVetor, sistemas[i], sistemas[i+1]);

		if((sistemas[i] * coeficientes[0] - 1) % sistemas[i+1] == 0) {
			inverso = coeficientes[0];
		} else {
			inverso = coeficientes[1];
		}

		calcularResultado(sistemas[i], 1, sistemas[i + 1], inverso, Valormdc, s, contador);
		contador++;

		tamanhoDoVetor[0] = 0;	
	}

	int cont = 0;
	for(int i = 0; i < 6; i += 2) {
		resultado += sistemas[i] * s[cont] * abm[i];
		// printf("%i, %i, %i\n", sistemas[i], s[cont], abm[i]);
		cont++;
	}

	// printf("X0 = %i\n", resultado);

	if(resultado > M || resultado < 0) {
		for(int j = 0; resultado > M || resultado < 0; j++) {
			if(resultado > M) resultado = resultado % M;
			if(resultado < 0) resultado = resultado + M;
		}
	}

	printf("X = %i\n", resultado);	

	return  0;
}
